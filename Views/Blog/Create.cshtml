@model OnlineBloggingPlatform.ViewModels.CreateBlogPostViewModel
@{
    ViewData["Title"] = "Create New Post";
}

<div class="container page-transition">
    <div class="row">
        <div class="col-lg-8 offset-lg-2">
            <div class="card shadow-lg border-0 mt-4">
                <div class="card-header bg-primary text-white py-3">
                    <h3 class="mb-0 display-font">
                        <i class="fas fa-plus-circle"></i> Create New Post
                    </h3>
                </div>
                <div class="card-body p-4">
                    <form asp-action="Create" method="post" enctype="multipart/form-data">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
                        
                        <div class="row">
                            <div class="col-md-8 mb-3">
                                <label asp-for="Title" class="form-label fw-bold">
                                    <i class="fas fa-heading"></i> Post Title *
                                </label>
                                <input asp-for="Title" class="form-control form-control-lg" 
                                       placeholder="Enter an engaging title for your post">
                                <span asp-validation-for="Title" class="text-danger"></span>
                            </div>
                            <div class="col-md-4 mb-3">
                                <label asp-for="CategoryId" class="form-label fw-bold">
                                    <i class="fas fa-tags"></i> Category
                                </label>
                                <select asp-for="CategoryId" class="form-select" asp-items="@(new SelectList(Model.Categories ?? new List<OnlineBloggingPlatform.Models.Category>(), "Id", "Name"))">
                                    <option value="">Select Category</option>
                                </select>
                                <span asp-validation-for="CategoryId" class="text-danger"></span>
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="Excerpt" class="form-label fw-bold">
                                <i class="fas fa-quote-left"></i> Post Excerpt
                            </label>
                            <textarea asp-for="Excerpt" class="form-control" rows="3" 
                                      placeholder="Write a compelling summary of your post (optional)"
                                      maxlength="500"></textarea>
                            <span asp-validation-for="Excerpt" class="text-danger"></span>
                            <small class="text-muted">This will be displayed in post previews and search results.</small>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="FeaturedImageUrl" class="form-label fw-bold">
                                <i class="fas fa-image"></i> Featured Image URL
                            </label>
                            <input asp-for="FeaturedImageUrl" class="form-control" 
                                   placeholder="https://example.com/image.jpg (optional)">
                            <span asp-validation-for="FeaturedImageUrl" class="text-danger"></span>
                            <small class="text-muted">Add a compelling image to make your post stand out.</small>
                        </div>
                        
                        <div class="mb-4">
                            <label asp-for="Content" class="form-label fw-bold">
                                <i class="fas fa-edit"></i> Post Content *
                            </label>
                            <div id="editor-toolbar" class="border-bottom pb-2 mb-2">
                                <div class="btn-group btn-group-sm" role="group">
                                    <button type="button" class="btn btn-outline-secondary" onclick="formatText('bold')" title="Bold">
                                        <i class="fas fa-bold"></i>
                                    </button>
                                    <button type="button" class="btn btn-outline-secondary" onclick="formatText('italic')" title="Italic">
                                        <i class="fas fa-italic"></i>
                                    </button>
                                    <button type="button" class="btn btn-outline-secondary" onclick="formatText('underline')" title="Underline">
                                        <i class="fas fa-underline"></i>
                                    </button>
                                </div>
                                <div class="btn-group btn-group-sm ms-2" role="group">
                                    <button type="button" class="btn btn-outline-secondary" onclick="formatText('insertOrderedList')" title="Numbered List">
                                        <i class="fas fa-list-ol"></i>
                                    </button>
                                    <button type="button" class="btn btn-outline-secondary" onclick="formatText('insertUnorderedList')" title="Bullet List">
                                        <i class="fas fa-list-ul"></i>
                                    </button>
                                </div>
                                <div class="btn-group btn-group-sm ms-2" role="group">
                                    <button type="button" class="btn btn-outline-secondary" onclick="insertHeading('h2')" title="Heading 2">
                                        <i class="fas fa-heading"></i> H2
                                    </button>
                                    <button type="button" class="btn btn-outline-secondary" onclick="insertHeading('h3')" title="Heading 3">
                                        <i class="fas fa-heading"></i> H3
                                    </button>
                                </div>
                            </div>
                            <div id="editor" contenteditable="true" class="form-control" style="min-height: 300px; max-height: 500px; overflow-y: auto;">
                                <p>Start writing your amazing post here...</p>
                            </div>
                            <textarea asp-for="Content" id="content-input" style="display: none;"></textarea>
                            <span asp-validation-for="Content" class="text-danger"></span>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="Tags" class="form-label fw-bold">
                                    <i class="fas fa-hashtag"></i> Tags
                                </label>
                                <input asp-for="Tags" class="form-control" 
                                       placeholder="web development, programming, tutorial (comma separated)">
                                <span asp-validation-for="Tags" class="text-danger"></span>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label asp-for="BlogId" class="form-label fw-bold">
                                    <i class="fas fa-blog"></i> Blog (Optional)
                                </label>
                                <select asp-for="BlogId" class="form-select" asp-items="@(new SelectList(Model.UserBlogs ?? new List<OnlineBloggingPlatform.Models.Blog>(), "Id", "Title"))">
                                    <option value="">No specific blog</option>
                                </select>
                                <span asp-validation-for="BlogId" class="text-danger"></span>
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="MetaDescription" class="form-label fw-bold">
                                <i class="fas fa-search"></i> SEO Meta Description
                            </label>
                            <textarea asp-for="MetaDescription" class="form-control" rows="2" 
                                      placeholder="Brief description for search engines (optional)"
                                      maxlength="160"></textarea>
                            <span asp-validation-for="MetaDescription" class="text-danger"></span>
                        </div>
                        
                        <div class="row mb-4">
                            <div class="col-md-6">
                                <div class="form-check form-switch">
                                    <input asp-for="IsPublished" class="form-check-input" id="publishSwitch">
                                    <label asp-for="IsPublished" class="form-check-label fw-bold" for="publishSwitch">
                                        <i class="fas fa-eye"></i> Publish Immediately
                                    </label>
                                </div>
                                <small class="text-muted">Uncheck to save as draft</small>
                            </div>
                            <div class="col-md-6">
                                <div class="form-check form-switch">
                                    <input asp-for="IsFeatured" class="form-check-input" id="featuredSwitch">
                                    <label asp-for="IsFeatured" class="form-check-label fw-bold" for="featuredSwitch">
                                        <i class="fas fa-star"></i> Mark as Featured
                                    </label>
                                </div>
                                <small class="text-muted">Featured posts appear on homepage</small>
                            </div>
                        </div>
                        
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <a href="@Url.Action("Index", "Home")" class="btn btn-secondary me-md-2">
                                <i class="fas fa-times"></i> Cancel
                            </a>
                            <button type="button" class="btn btn-outline-primary me-md-2" onclick="previewPost()">
                                <i class="fas fa-eye"></i> Preview
                            </button>
                            <button type="submit" class="btn btn-primary btn-lg">
                                <i class="fas fa-save"></i> <span id="saveButtonText">Publish Post</span>
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Preview Modal -->
<div class="modal fade" id="previewModal" tabindex="-1">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-eye"></i> Post Preview
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="previewContent">
                <!-- Preview content will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close Preview</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        // Rich Text Editor Functions
        function formatText(command) {
            document.execCommand(command, false, null);
            updateContentInput();
        }
        
        function insertHeading(tag) {
            const selection = window.getSelection();
            if (selection.rangeCount > 0) {
                const range = selection.getRangeAt(0);
                const element = document.createElement(tag);
                element.textContent = range.toString() || `${tag.toUpperCase()} Heading`;
                range.deleteContents();
                range.insertNode(element);
                updateContentInput();
            }
        }
        
        function updateContentInput() {
            const editor = document.getElementById('editor');
            const contentInput = document.getElementById('content-input');
            contentInput.value = editor.innerHTML;
        }
        
        // Preview Function
        function previewPost() {
            const title = document.querySelector('input[name="Title"]').value;
            const content = document.getElementById('editor').innerHTML;
            const excerpt = document.querySelector('textarea[name="Excerpt"]').value;
            const imageUrl = document.querySelector('input[name="FeaturedImageUrl"]').value;
            
            let previewHtml = '<article class="post-preview">';
            
            if (imageUrl) {
                previewHtml += `<img src="${imageUrl}" class="img-fluid mb-3" alt="${title}">`;
            }
            
            previewHtml += `<h1 class="display-font">${title || 'Your Post Title'}</h1>`;
            
            if (excerpt) {
                previewHtml += `<p class="lead text-muted">${excerpt}</p><hr>`;
            }
            
            previewHtml += `<div class="post-content">${content || '<p>Your post content will appear here...</p>'}</div>`;
            previewHtml += '</article>';
            
            document.getElementById('previewContent').innerHTML = previewHtml;
            
            const modal = new bootstrap.Modal(document.getElementById('previewModal'));
            modal.show();
        }
        
        // Initialize editor
        document.addEventListener('DOMContentLoaded', function() {
            const editor = document.getElementById('editor');
            const contentInput = document.getElementById('content-input');
            const publishSwitch = document.getElementById('publishSwitch');
            const saveButtonText = document.getElementById('saveButtonText');
            
            // Update content input when editor content changes
            editor.addEventListener('input', updateContentInput);
            editor.addEventListener('paste', function() {
                setTimeout(updateContentInput, 100);
            });
            
            // Update button text based on publish status
            publishSwitch.addEventListener('change', function() {
                saveButtonText.textContent = this.checked ? 'Publish Post' : 'Save Draft';
            });
            
            // Load existing content if editing
            if (contentInput.value) {
                editor.innerHTML = contentInput.value;
            }
            
            // Character count for meta description
            const metaDesc = document.querySelector('textarea[name="MetaDescription"]');
            if (metaDesc) {
                const counter = document.createElement('small');
                counter.className = 'text-muted float-end';
                counter.textContent = '0/160';
                metaDesc.parentNode.appendChild(counter);
                
                metaDesc.addEventListener('input', function() {
                    const count = this.value.length;
                    counter.textContent = `${count}/160`;
                    counter.className = count > 160 ? 'text-danger float-end' : 'text-muted float-end';
                });
            }
        });
    </script>
}